environment:
  global:
    CRATE_NAME: trust
    RUST_VERSION: nightly
  matrix:
    - TARGET: i586-pc-windows-msvc
    - TARGET: i686-pc-windows-gnu
    - TARGET: i686-pc-windows-msvc
    - TARGET: x86_64-pc-windows-gnu
    - TARGET: x86_64-pc-windows-msvc

matrix:
  allow_failures:
    # FIXME `gcc crate error: "Is `cl.exe` not installed?"
    - TARGET: i586-pc-windows-msvc
    # FIXME `gcc crate error: "ld: unrecognized option '--large-address-aware'"
    - TARGET: i686-pc-windows-gnu

install:
  - ps: ci\install.ps1

build: false

test_script:
  # TODO releases -> master
  - if [%APPVEYOR_REPO_BRANCH%]==releases (
      if [%APPVEYOR_REPO_TAG%]==[true] (
        cargo rustc --target %TARGET% --release --bin hello -- -C lto)
      )
    ) else (
      cargo build --target %TARGET% &&
      cargo build --target %TARGET% --release &&
      cargo test --target %TARGET% &&
      cargo test --target %TARGET% --release)
    )

before_deploy:
  - ps: ci\package.ps1

deploy:
  description: 'Windows release'
  artifact: /.*\.zip/
  auth_token:
    secure: bQ29dEXeNG5VP2hQcWiZ1xsfmkGosteCDNeYu/cXTX4lOeghOp0qANpQXmGfal29
  provider: GitHub
  on:
    RUST_VERSION: nightly
    appveyor_repo_tag: true
    # TODO change back to master
    branch: releases

cache:
  - C:\Users\appveyor\.cargo\registry
  - target

branches:
  only:
    - auto
    # Releases only
    - master
    - try
    # TODO remove. For testing only
    - releases
