environment:
  global:
    CRATE_NAME: trust
    DEPLOY_VERSION: nightly
    RUST_VERSION: nightly
  matrix:
    - TARGET: i586-pc-windows-msvc
    - TARGET: i686-pc-windows-gnu
    - TARGET: i686-pc-windows-msvc
    - TARGET: x86_64-pc-windows-gnu
    - TARGET: x86_64-pc-windows-msvc
    # Just to check these are skipped during deploys
    - TARGET: x86_64-pc-windows-gnu
      RUST_VERSION: stable
    - TARGET: x86_64-pc-windows-msvc
      RUST_VERSION: stable

install:
  - ps: ci\install.ps1

build: false

test_script:
  # NOTE(no-default-features) `gcc` doesn't work out of the box for the i586-msvc target
  # cf. alexcrichton/gcc-rs#108
  - if [%APPVEYOR_REPO_TAG%]==[false] (
      if [%TARGET%]==[i586-pc-windows-msvc] (
        cargo build --no-default-features --target %TARGET% &&
        cargo build --no-default-features --target %TARGET% --release &&
        cargo test --no-default-features --target %TARGET% &&
        cargo test --no-default-features --target %TARGET% --release
      ) else (
        cargo build --target %TARGET% &&
        cargo build --target %TARGET% --release &&
        cargo test --target %TARGET% &&
        cargo test --target %TARGET% --release
      )
    ) else (
      if [%RUST_VERSION%]==[%DEPLOY_VERSION%] (
        cargo rustc --target %TARGET% --release --bin hello -- -C lto
      )
    )

before_deploy:
  - ps: ci\package.ps1

deploy:
  description: 'Windows release'
  artifact: /.*\.zip/
  auth_token:
    secure: bQ29dEXeNG5VP2hQcWiZ1xsfmkGosteCDNeYu/cXTX4lOeghOp0qANpQXmGfal29
  provider: GitHub
  on:
    # NOTE this "version" must match %DEPLOY_VERSION% (see top)
    RUST_VERSION: nightly
    appveyor_repo_tag: true

cache:
  - C:\Users\appveyor\.cargo\registry
  - target

branches:
  only:
    # Release tags
    - /^v\d+\.\d+\.\d+.*$/
    - auto
    - try

notifications:
  - provider: Email
    on_build_success: false
